@model StudentInformationSystem.Models.CourseSelectionViewModel
@{
    ViewBag.Title = "在线选课";
}

<h2>在线选课</h2>
<p>请根据培养计划要求，完成本学期的课程选择。</p>

<div class="row">
    <div class="col-md-6">
        <div class="alert alert-info">
            <strong>体育选修课要求:</strong> 需选够 3 门，您已选 @Model.SportsCoursesTaken 门。
        </div>
    </div>
    <div class="col-md-6">
        <div class="alert alert-info">
            <strong>思政必修课要求:</strong> 需选够 4 门，您已选 @Model.PoliticsCoursesTaken 门。
        </div>
    </div>
</div>

<div class="timetable-tabs">
    <button class="btn btn-primary active" data-target="#my-selected">我的已选课程 <span class="badge">@Model.EnrolledCourses.Count</span></button>
    <button class="btn btn-default" data-target="#course-market">进入选课市场</button>
</div>
<hr />

<div class="tab-content" id="main-tab-content" style="padding-top: 10px;">
    <div class="tab-pane active" id="my-selected">
        <h4>已选课程列表</h4>
        @if (Model.EnrolledCourses.Any())
        {
            var courseSchedules = ViewBag.CourseSchedules as List<StudentInformationSystem.Models.ClassSessions>;
            if (courseSchedules == null) { courseSchedules = new List<StudentInformationSystem.Models.ClassSessions>(); }
            
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>课程名称</th>
                            <th>授课教师</th>
                            <th>学分</th>
                            <th>上课时间</th>
                            <th class="text-center">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.EnrolledCourses)
                        {
                            <tr>
                                <td>
                                    <strong>@item.Courses.CourseName</strong>
                                    @{
                                        string courseType = "";
                                        switch (item.Courses.CourseType)
                                        {
                                            case 1: courseType = "专业必修"; break;
                                            case 2: courseType = "公共必修"; break;
                                            case 3: courseType = "专业选修"; break;
                                            case 4: courseType = "公共选修"; break;
                                            case 5: courseType = "体育选修"; break;
                                            default: courseType = "未知"; break;
                                        }
                                    }
                                    <br /><small><span class="label label-info" style="font-size: 9px;">@courseType</span></small>
                                </td>
                                <td>
                                    @if (item.Courses.Teachers != null)
                                    {
                                        @item.Courses.Teachers.TeacherName
                                    }
                                    else
                                    {
                                        <span class="text-muted">待分配</span>
                                    }
                                </td>
                                <td>@item.Courses.Credits 学分</td>
                                <td>
                                    @{
                                        var schedules = courseSchedules.Where(cs => cs.CourseID == item.CourseID).ToList();
                                        string[] dayNames = { "", "周一", "周二", "周三", "周四", "周五", "周六", "周日" };
                                        var holidayWeeks = StudentInformationSystem.Helpers.HolidayHelper.GetCurrentSemesterHolidayWeeks();
                                    }
                                    @if (schedules.Any())
                                    {
                                        foreach (var schedule in schedules)
                                        {
                                            var dayName = schedule.DayOfWeek >= 1 && schedule.DayOfWeek <= 7 ? dayNames[schedule.DayOfWeek] : "未知";
                                            
                                            // 检查是否包含假日周次
                                            var hasHolidays = false;
                                            for (int week = schedule.StartWeek; week <= schedule.EndWeek; week++)
                                            {
                                                if (holidayWeeks.Contains(week))
                                                {
                                                    hasHolidays = true;
                                                    break;
                                                }
                                            }
                                            
                                            <div class="schedule-item" style="margin-bottom: 4px;">
                                                <small>
                                                    <span class="label label-primary" style="font-size: 9px;">第@(schedule.StartWeek)-@(schedule.EndWeek)周</span>
                                                    <span class="label label-default" style="font-size: 9px;">@dayName</span>
                                                    <span class="label label-default" style="font-size: 9px;">第@(schedule.StartPeriod)-@(schedule.EndPeriod)节</span>
                                                    <span class="label label-success" style="font-size: 9px;">@schedule.Classroom</span>
                                                    @if (hasHolidays)
                                                    {
                                                        <span class="label label-warning" style="font-size: 9px;" title="包含法定假日">含假日</span>
                                                    }
                                                </small>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <small class="text-muted">
                                            <span class="glyphicon glyphicon-time"></span> 时间待定
                                        </small>
                                    }
                                </td>
                                <td class="text-center">
                                    @using (Html.BeginForm("WithdrawCourse", "Student", new { courseId = item.CourseID }, FormMethod.Post, new { @style = "display: inline;" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-warning btn-xs">退 选</button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p class="text-muted">您当前还未选择任何课程。</p>
        }
    </div>

    <div class="tab-pane" id="course-market">
        <h4>选择课程类别进行选课</h4>
        <div class="btn-group" id="category-buttons">
            @if (Model.RetakeCourses.Any())
            {
                <button class="btn btn-default" data-target="#retake">重修课程</button>
            }
            <button class="btn btn-default" data-target="#major">专业必修</button>
            <button class="btn btn-default" data-target="#public">公共必修</button>
            <button class="btn btn-default" data-target="#sports">体育选修</button>
            <button class="btn btn-default" data-target="#politics">思政必修</button>
            <button class="btn btn-default" data-target="#other">其他选修</button>
        </div>

        <div class="tab-content" style="padding-top: 20px;">
            @if (Model.RetakeCourses.Any())
            {
                <div class="tab-pane" id="retake">@Html.Partial("_CourseListPartial", Model.RetakeCourses)</div>
            }
            <div class="tab-pane" id="major">@Html.Partial("_CourseListPartial", Model.MajorElectives)</div>
            <div class="tab-pane" id="public">@Html.Partial("_CourseListPartial", Model.PublicElectives)</div>
            <div class="tab-pane" id="sports">@Html.Partial("_CourseListPartial", Model.SportsElectives)</div>
            <div class="tab-pane" id="politics">@Html.Partial("_CourseListPartial", Model.PoliticsElectives)</div>
            <div class="tab-pane" id="other">@Html.Partial("_CourseListPartial", Model.OtherElectives)</div>
        </div>
    </div>
</div>

@* --- 3. 新增的 CSS 和 JavaScript 脚本 --- *@
@section Scripts {
    <script>
        $(document).ready(function () {

            // --- 脚本1: 控制主标签页切换 ("我的已选课程" 和 "进入选课市场") ---
            $('.timetable-tabs .btn').on('click', function (e) {
                e.preventDefault(); // 阻止默认行为

                // 按钮样式切换
                $('.timetable-tabs .btn').removeClass('btn-primary active').addClass('btn-default');
                $(this).removeClass('btn-default').addClass('btn-primary active');

                // 内容区切换
                var targetPaneId = $(this).data('target');
                $('#main-tab-content > .tab-pane').removeClass('active'); // 隐藏所有顶层tab-pane
                $(targetPaneId).addClass('active'); // 只显示目标tab-pane
            });

            // --- 脚本2: 控制"选课市场"内的按钮和其对应的内容 ---
            $('#category-buttons .btn').on('click', function (e) {
                e.preventDefault();

                // 按钮样式切换
                $('#category-buttons .btn').removeClass('btn-primary active').addClass('btn-default');
                $(this).removeClass('btn-default').addClass('btn-primary active');

                // 内容区切换
                var targetPaneId = $(this).data('target');
                $('#course-market .tab-content .tab-pane').removeClass('active');
                $(targetPaneId).addClass('active');
            });

            // --- 初始状态：默认激活"选课市场"里的第一个类别 ---
            var firstCategoryButton = $('#category-buttons .btn').first();
            if (firstCategoryButton.length > 0) {
                firstCategoryButton.click();
            }
        });
    </script>
}

<style>
    /* --- 新增的CSS，用于解决闪屏问题 --- */
    .tab-content > .tab-pane {
        display: none;
    }

    .tab-content > .active {
        display: block;
    }

    .timetable-tabs {
        margin-bottom: 5px;
    }

    .schedule-item {
        line-height: 1.2;
    }
    
    .label {
        margin-right: 2px;
        padding: 2px 4px;
        font-size: 9px !important;
        font-weight: normal;
    }
    
    .table td {
        vertical-align: middle;
    }
    
    .table th {
        background-color: #f5f5f5;
        font-weight: bold;
    }
</style>