@{
    var currentUser = Session["User"] as StudentInformationSystem.Models.Users;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - 教务管理系统</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <style>
        /* --- 1. 颜色变量定义 --- */
        :root {
            --bg-color: #f5f7f9;
            --sidebar-bg: #ffffff;
            --header-bg: #ffffff;
            --text-color-primary: #333333;
            --text-color-secondary: #555555;
            --menu-hover-bg: #e6f7ff;
            --menu-active-bg: #007bff;
            --menu-active-text: #ffffff;
            --border-color: #e8e8e8;
        }

        body.dark-mode {
            --bg-color: #141414;
            --sidebar-bg: #1f1f1f;
            --header-bg: #1f1f1f;
            --text-color-primary: #e0e0e0;
            --text-color-secondary: #a0a0a0;
            --menu-hover-bg: #2a2a2a;
            --border-color: #303030;
        }

        /* --- 2. 基础和桌面端布局 (稳定版) --- */
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: "Microsoft YaHei", sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color-primary);
            transition: background-color 0.3s, color 0.3s;
            overflow-x: hidden;
        }

        .sidebar {
            width: 240px;
            background-color: var(--sidebar-bg);
            border-right: 1px solid var(--border-color);
            position: fixed;
            left: 0;
            top: 0;
            height: 100%;
            z-index: 1001;
            transition: left 0.3s ease, background-color 0.3s;
            display: flex;
            flex-direction: column; /* 为了底部切换器 */
        }

        .main-content {
            margin-left: 240px;
            width: calc(100% - 240px);
            height: 100vh;
            display: flex;
            flex-direction: column;
            transition: margin-left 0.3s ease, width 0.3s ease;
        }

        .header-bar {
            height: 60px;
            background: var(--header-bg);
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            border-bottom: 1px solid var(--border-color);
            flex-shrink: 0;
            transition: background-color 0.3s, border-color 0.3s;
        }

        .content-body {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .hamburger-menu {
            display: none;
        }

        .sidebar-overlay {
            display: none;
        }

        /* --- 3. 移动端响应式布局 (稳定版) --- */
        @@media screen and (max-width: 768px) {
            .sidebar {
                left: -240px;
            }

                .sidebar.visible {
                    left: 0;
                }

            .main-content {
                margin-left: 0;
                width: 100%;
            }

            .hamburger-menu {
                display: block !important;
                font-size: 20px;
                cursor: pointer;
                color: var(--text-color-primary);
            }

            .sidebar-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0,0,0,0.5);
                z-index: 1000;
            }
        }

        /* --- 4. 组件样式 --- */
        .sidebar-header {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px;
            height: 60px;
            border-bottom: 1px solid var(--border-color);
            box-sizing: border-box;
        }

            .sidebar-header .logo-text {
                font-size: 20px;
                font-weight: bold;
                margin-left: 10px;
                color: var(--text-color-primary);
            }

        .sidebar-menu {
            list-style: none;
            padding: 10px 0;
            margin: 0;
            flex-grow: 1; /* 关键，让菜单占据中间区域 */
        }

            .sidebar-menu li a {
                display: flex;
                align-items: center;
                color: var(--text-color-secondary);
                padding: 12px 25px;
                text-decoration: none;
                font-size: 15px;
                border-radius: 5px;
                margin: 5px 10px;
            }

                .sidebar-menu li a:hover {
                    background-color: var(--menu-hover-bg);
                }

            .sidebar-menu li.active a {
                background-color: var(--menu-active-bg);
                color: var(--menu-active-text);
            }

            .sidebar-menu li a .glyphicon {
                margin-right: 15px;
                width: 20px;
                text-align: center;
            }

        .header-left {
            display: flex;
            align-items: center;
        }

        .header-right {
            display: flex;
            align-items: center;
        }

        .user-info a {
            color: var(--text-color-secondary);
            text-decoration: none;
            font-size: 15px;
        }

        /* --- 5. 新增的主题切换器样式 --- */
        .sidebar-footer {
            padding: 20px;
            border-top: 1px solid var(--border-color);
            text-align: center;
        }

        .theme-toggle {
            cursor: pointer;
            font-size: 22px;
            color: var(--text-color-secondary);
        }
        /* --- 新增的主题切换开关样式 --- */
        .theme-switch-wrapper {
            display: flex;
            align-items: center;
            margin-right: 20px;
        }

        .theme-switch {
            display: inline-block;
            height: 24px;
            position: relative;
            width: 48px;
        }

            .theme-switch input {
                display: none;
            }

        .slider {
            background-color: #ccc;
            bottom: 0;
            cursor: pointer;
            left: 0;
            position: absolute;
            right: 0;
            top: 0;
            transition: .4s;
            border-radius: 24px;
        }

            .slider:before {
                background-color: #fff;
                bottom: 3px;
                content: "";
                height: 18px;
                left: 3px;
                position: absolute;
                transition: .4s;
                width: 18px;
                border-radius: 50%;
            }

        input:checked + .slider {
            background-color: #007bff;
        }

            input:checked + .slider:before {
                transform: translateX(24px);
            }
        /* --- 新增的 Logo 颜色反转样式 --- */
        body:not(.dark-mode) .sidebar-logo-img {
            filter: invert(1);
        }
        /* --- 新增：修复成绩徽章(Badge)的显示样式 --- */
        .list-group-item .badge {
            background-color: var(--menu-active-bg); /* 使用我们主题的蓝色作为背景 */
            color: var(--menu-active-text); /* 使用主题中与蓝色搭配的文字颜色 (白色) */
        }
    </style>
</head>
<body>
    <div class="page-wrapper">
        <div class="sidebar-overlay" style="display:none;"></div>
        <aside class="sidebar">
            <div class="sidebar-header">
                <img src="https://jwgl.hrbzy.edu.cn:9081/style04/images/logo.png" height="35" alt="校徽" class="sidebar-logo-img"/>
            </div>

            <ul class="sidebar-menu">
                @if (currentUser != null)
                {
                    if (currentUser.Role == 0) // 管理员菜单
                    {
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Index" ? "active" : "")"><a href="@Url.Action("Index", "Admin")"><span class="glyphicon glyphicon-dashboard"></span> 控制台</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Student") ? "active" : "")"><a href="@Url.Action("StudentList", "Admin")"><span class="glyphicon glyphicon-user"></span> 学生管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Teacher") ? "active" : "")"><a href="@Url.Action("TeacherList", "Admin")"><span class="glyphicon glyphicon-education"></span> 教师管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Class") ? "active" : "")"><a href="@Url.Action("ClassList", "Admin")"><span class="glyphicon glyphicon-th-large"></span> 班级管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Course") ? "active" : "")"><a href="@Url.Action("CourseList", "Admin")"><span class="glyphicon glyphicon-list-alt"></span> 课程管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "EnrollmentList" ? "active" : "")"><a href="@Url.Action("EnrollmentList", "Admin")"><span class="glyphicon glyphicon-check"></span> 选课记录</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Exam") ? "active" : "")"><a href="@Url.Action("ExamList", "Admin")"><span class="glyphicon glyphicon-pencil"></span> 考试管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "ChangePassword" ? "active" : "")"><a href="@Url.Action("ChangePassword", "Admin")"><span class="glyphicon glyphicon-lock"></span> 修改密码</a></li>
                    }
                    else if (currentUser.Role == 1) // 教师菜单
                    {
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Index" ? "active" : "")"><a href="@Url.Action("Index", "Teacher")"><span class="glyphicon glyphicon-dashboard"></span> 首页</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Timetable" ? "active" : "")"><a href="@Url.Action("Timetable", "Teacher")"><span class="glyphicon glyphicon-calendar"></span> 我的课表</a></li>
                        <li class="@(new[] {"CourseList", "GradeEntry"}.Contains(ViewContext.RouteData.GetRequiredString("action")) ? "active" : "")"><a href="@Url.Action("CourseList", "Teacher")"><span class="glyphicon glyphicon-edit"></span> 成绩录入</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Exam") ? "active" : "")"><a href="@Url.Action("ExamList", "Teacher")"><span class="glyphicon glyphicon-pencil"></span> 考试管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "ChangePassword" ? "active" : "")"><a href="@Url.Action("ChangePassword", "Teacher")"><span class="glyphicon glyphicon-lock"></span> 修改密码</a></li>
                    }
                    else if (currentUser.Role == 2) // 学生菜单
                    {
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Index" ? "active" : "")"><a href="@Url.Action("Index", "Student")"><span class="glyphicon glyphicon-home"></span> 个人中心</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Timetable" ? "active" : "")"><a href="@Url.Action("Timetable", "Student")"><span class="glyphicon glyphicon-calendar"></span> 我的课表</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "CourseSelection" ? "active" : "")"><a href="@Url.Action("CourseSelection", "Student")"><span class="glyphicon glyphicon-check"></span> 在线选课</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "MyExams" ? "active" : "")"><a href="@Url.Action("MyExams", "Student")"><span class="glyphicon glyphicon-pencil"></span> 我的考试</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "ChangePassword" ? "active" : "")"><a href="@Url.Action("ChangePassword", "Student")"><span class="glyphicon glyphicon-lock"></span> 修改密码</a></li>
                    }
                }
            </ul>

            <div class="sidebar-footer">
                <div class="theme-toggle" title="切换亮色/暗色主题">
                    <span class="glyphicon glyphicon-sunglasses" id="theme-icon"></span>
                </div>
            </div>
        </aside>

        <div class="main-content">
            <header class="header-bar">
                <div class="header-left">
                    <div class="hamburger-menu">
                        <span>&#9776;</span>
                    </div>
                </div>
                <div class="header-right">
                    <div class="theme-switch-wrapper">
                        <label class="theme-switch" for="theme-checkbox" title="切换亮色/暗色主题">
                            <input type="checkbox" id="theme-checkbox" />
                            <div class="slider"></div>
                        </label>
                    </div>

                    <div class="user-info">
                        @if (currentUser != null)
                        {
                            <a href="#"><span class="glyphicon glyphicon-user"></span> 欢迎您, @currentUser.Username</a>
                            <span style="margin: 0 10px;">|</span>
                            <a href="@Url.Action("Logout", "Account")"><span class="glyphicon glyphicon-log-out"></span> 安全退出</a>
                        }
                    </div>
                </div>
            </header>
            <main class="content-body">
                @RenderBody()
            </main>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

<script>
    $(document).ready(function () {
        // --- 主题切换逻辑 (升级版) ---
        const themeCheckbox = $('#theme-checkbox');
        const body = $('body');

        function applyTheme(theme, animate) {
            if (theme === 'dark') {
                body.addClass('dark-mode');
                themeCheckbox.prop('checked', true);
            } else {
                body.removeClass('dark-mode');
                themeCheckbox.prop('checked', false);
            }
        }

        // 页面加载时，应用保存的主题
        let currentTheme = localStorage.getItem('theme') || 'light';
        applyTheme(currentTheme);

        // 当点击开关时，切换主题
        themeCheckbox.on('change', function () {
            currentTheme = $(this).is(':checked') ? 'dark' : 'light';
            localStorage.setItem('theme', currentTheme);
            applyTheme(currentTheme);
        });


        // --- 响应式菜单的控制逻辑 (保持不变) ---
        const hamburger = $('.hamburger-menu');
        const sidebar = $('.sidebar');
        const overlay = $('.sidebar-overlay');
        hamburger.on('click', function () {
            sidebar.addClass('visible');
            overlay.show();
        });
        overlay.on('click', function () {
            sidebar.removeClass('visible');
            overlay.hide();
        });
    });
</script>
</body>
</html>