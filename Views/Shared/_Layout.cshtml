@{
    var currentUser = Session["User"] as StudentInformationSystem.Models.Users;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - 教务管理系统</title>
    
    <!-- 防止暗色模式和主题色闪白的预设脚本 - 必须在CSS之前 -->
    <script>
        (function() {
            // 立即检查并应用暗色模式，防止闪白
            var theme = localStorage.getItem('theme');
            var selectedTheme = localStorage.getItem('selected-theme') || 'deep-blue';
            
            // 应用暗色模式
            if (theme === 'dark') {
                document.documentElement.classList.add('dark-mode');
                document.body && document.body.classList.add('dark-mode');
            }
            
            // 应用主题色，防止颜色切换闪烁
            var themeClasses = {
                'default': 'theme-deep-red',
                'deep-blue': 'theme-deep-blue', 
                'light-blue': 'theme-light-blue',
                'light-green': 'theme-light-green',
                'ocean-blue': 'theme-ocean-blue',
                'light-purple': 'theme-light-purple'
            };
            
            if (themeClasses[selectedTheme]) {
                document.documentElement.classList.add(themeClasses[selectedTheme]);
                if (document.body) document.body.classList.add(themeClasses[selectedTheme]);
            }
        })();
    </script>
    
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="@Url.Content("~/Content/theme-system.css")" rel="stylesheet" type="text/css" />

    <style>
        /* --- 基础和桌面端布局 (稳定版) --- */
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: "Microsoft YaHei", "微软雅黑", sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color-primary);
            /* 移除过渡动画以减少闪烁 - 只在页面加载后启用 */
            overflow-x: hidden;
        }

        /* 页面加载完成后启用过渡动画 */
        body.transitions-enabled, 
        body.transitions-enabled .sidebar,
        body.transitions-enabled .main-content,
        body.transitions-enabled .header-bar,
        body.transitions-enabled .theme-floating-menu,
        body.transitions-enabled .sidebar-menu li a {
            transition: background-color 0.3s, color 0.3s, left 0.3s ease, margin-left 0.3s ease, width 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
        }

        .sidebar {
            width: 240px;
            background-color: var(--sidebar-bg);
            border-right: 1px solid var(--border-color);
            position: fixed;
            left: 0;
            top: 0;
            height: 100%;
            z-index: 1001;
            display: flex;
            flex-direction: column;
        }

        .main-content {
            margin-left: 240px;
            width: calc(100% - 240px);
            height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .header-bar {
            height: 60px;
            background: var(--header-bg);
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            border-bottom: 1px solid var(--border-color);
            flex-shrink: 0;
            position: relative;
            z-index: 1000;
        }

        .content-body {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .hamburger-menu {
            display: none;
        }

        .sidebar-overlay {
            display: none;
        }

        /* --- 移动端响应式布局 (稳定版) --- */
        @@media screen and (max-width: 768px) {
            .sidebar {
                left: -240px;
            }

                .sidebar.visible {
                    left: 0;
                }

            .main-content {
                margin-left: 0;
                width: 100%;
            }

            .hamburger-menu {
                display: block !important;
                font-size: 20px;
                cursor: pointer;
                color: var(--text-color-primary);
            }

            .sidebar-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0,0,0,0.5);
                z-index: 1000;
            }
        }

        /* --- 组件样式 --- */
        .sidebar-header {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px;
            height: 60px;
            border-bottom: 1px solid var(--border-color);
            box-sizing: border-box;
        }

            .sidebar-header .logo-text {
                font-size: 20px;
                font-weight: bold;
                margin-left: 10px;
                color: var(--text-color-primary);
            }

        .sidebar-menu {
            list-style: none;
            padding: 10px 0;
            margin: 0;
            flex-grow: 1;
        }

            .sidebar-menu li a {
                display: block;
                color: var(--text-color-secondary);
                padding: 12px 25px;
                text-decoration: none;
                font-size: 15px;
                border-radius: 5px;
                margin: 5px 10px;
                text-align: center; /* 恢复居中对齐 */
                position: relative;
            }

                .sidebar-menu li a:hover {
                    background-color: var(--menu-hover-bg);
                }

            .sidebar-menu li.active a {
                background-color: var(--theme-primary);
                color: var(--menu-active-text);
            }

            .sidebar-menu li a .glyphicon {
                margin-right: 8px;
                font-size: 14px;
            }

        .header-left {
            display: flex;
            align-items: center;
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .user-info a {
            color: var(--text-color-secondary);
            text-decoration: none;
            font-size: 15px;
            white-space: nowrap;
        }

        /* --- 主题切换器样式 --- */
        .sidebar-footer {
            padding: 20px;
            border-top: 1px solid var(--border-color);
            text-align: center;
        }

        /* 移除了暗色模式切换开关样式，现在使用齿轮图标菜单 */
        
        /* --- Logo 颜色反转样式 --- */
        body:not(.dark-mode) .sidebar-logo-img {
            filter: invert(1);
        }
        
        /* --- 修复成绩徽章(Badge)的显示样式 --- */
        .list-group-item .badge {
            background-color: var(--theme-primary);
            color: var(--menu-active-text);
        }
        
        /* --- 暗色模式下，修正默认按钮(btn-default)的样式 --- */
        body.dark-mode .btn-default {
            color: #ccc;
            background-color: #333;
            border-color: #555;
        }

            body.dark-mode .btn-default:hover {
                color: #fff;
                background-color: #444;
                border-color: #666;
            }

        .theme-toggle {
            cursor: pointer;
            font-size: 22px;
            color: var(--text-color-secondary);
        }
        
        /* --- 头部主题设置按钮样式 --- */
        .theme-settings-header-btn {
            background: var(--theme-primary);
            color: white;
            border: none;
            border-radius: 20px;
            padding: 8px 16px;
            font-size: 14px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
            font-family: inherit;
            outline: none;
            margin-right: 15px;
        }

        .theme-settings-header-btn:hover {
            background: var(--theme-primary-dark);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
        }

        .theme-settings-header-btn:focus {
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
        }

        .theme-settings-header-btn i {
            font-size: 14px;
        }
    </style>
</head>
<body class="@(Request.Cookies["theme"] != null && Request.Cookies["theme"].Value == "dark" ? "dark-mode" : "")">
    <div class="page-wrapper">
        <div class="sidebar-overlay" style="display:none;"></div>
        <aside class="sidebar">
            <div class="sidebar-header">
                <img src="https://jwgl.hrbzy.edu.cn:9081/style04/images/logo.png" height="35" alt="校徽" class="sidebar-logo-img" />
            </div>

            <ul class="sidebar-menu">
                @if (currentUser != null)
                {
                    if (currentUser.Role == 0) // 管理员菜单
                    {
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Index" ? "active" : "")"><a href="@Url.Action("Index", "Admin")"><span class="glyphicon glyphicon-dashboard"></span> 控制台</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Student") ? "active" : "")"><a href="@Url.Action("StudentList", "Admin")"><span class="glyphicon glyphicon-user"></span> 学生管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Teacher") ? "active" : "")"><a href="@Url.Action("TeacherList", "Admin")"><span class="glyphicon glyphicon-education"></span> 教师管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Class") ? "active" : "")"><a href="@Url.Action("ClassList", "Admin")"><span class="glyphicon glyphicon-th-large"></span> 班级管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Course") ? "active" : "")"><a href="@Url.Action("CourseList", "Admin")"><span class="glyphicon glyphicon-list-alt"></span> 课程管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "EnrollmentList" ? "active" : "")"><a href="@Url.Action("EnrollmentList", "Admin")"><span class="glyphicon glyphicon-check"></span> 选课记录</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Exam") ? "active" : "")"><a href="@Url.Action("ExamList", "Admin")"><span class="glyphicon glyphicon-pencil"></span> 考试管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "ChangePassword" ? "active" : "")"><a href="@Url.Action("ChangePassword", "Admin")"><span class="glyphicon glyphicon-lock"></span> 修改密码</a></li>
                    }
                    else if (currentUser.Role == 1) // 教师菜单
                    {
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Index" ? "active" : "")"><a href="@Url.Action("Index", "Teacher")"><span class="glyphicon glyphicon-dashboard"></span> 首页</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Timetable" ? "active" : "")"><a href="@Url.Action("Timetable", "Teacher")"><span class="glyphicon glyphicon-calendar"></span> 我的课表</a></li>
                        <li class="@(new[] {"CourseList", "GradeEntry"}.Contains(ViewContext.RouteData.GetRequiredString("action")) ? "active" : "")"><a href="@Url.Action("CourseList", "Teacher")"><span class="glyphicon glyphicon-edit"></span> 成绩录入</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action").StartsWith("Exam") ? "active" : "")"><a href="@Url.Action("ExamList", "Teacher")"><span class="glyphicon glyphicon-pencil"></span> 考试管理</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "ChangePassword" ? "active" : "")"><a href="@Url.Action("ChangePassword", "Teacher")"><span class="glyphicon glyphicon-lock"></span> 修改密码</a></li>
                    }
                    else if (currentUser.Role == 2) // 学生菜单
                    {
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Index" ? "active" : "")"><a href="@Url.Action("Index", "Student")"><span class="glyphicon glyphicon-home"></span> 个人中心</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "Timetable" ? "active" : "")"><a href="@Url.Action("Timetable", "Student")"><span class="glyphicon glyphicon-calendar"></span> 我的课表</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "CourseSelection" ? "active" : "")"><a href="@Url.Action("CourseSelection", "Student")"><span class="glyphicon glyphicon-check"></span> 在线选课</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "MyExams" ? "active" : "")"><a href="@Url.Action("MyExams", "Student")"><span class="glyphicon glyphicon-pencil"></span> 我的考试</a></li>
                        <li class="@(ViewContext.RouteData.GetRequiredString("action") == "ChangePassword" ? "active" : "")"><a href="@Url.Action("ChangePassword", "Student")"><span class="glyphicon glyphicon-lock"></span> 修改密码</a></li>
                    }
                }
            </ul>

            <div class="sidebar-footer">
            </div>
        </aside>

        <div class="main-content">
            <header class="header-bar">
                <div class="header-left">
                    <div class="hamburger-menu">
                        <span>&#9776;</span>
                    </div>
                </div>
                <div class="header-right">
                    <!-- 在用户信息左边添加主题设置按钮 -->
                    <button class="theme-settings-header-btn" id="main-theme-btn" title="主题设置">
                        <i class="glyphicon glyphicon-cog"></i> 主题设置
                    </button>
                    
                    <div class="user-info">
                        @if (currentUser != null)
                        {
                            <a href="#"><span class="glyphicon glyphicon-user"></span> 欢迎您, @currentUser.Username</a>
                            <span style="margin: 0 10px;">|</span>
                            <a href="@Url.Action("Logout", "Account")"><span class="glyphicon glyphicon-log-out"></span> 安全退出</a>
                        }
                    </div>
                </div>
            </header>
            <main class="content-body">
                @RenderBody()
            </main>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="@Url.Content("~/Scripts/theme-system.js")"></script>
    @RenderSection("scripts", required: false)
    <script>
        $(document).ready(function () {
            // --- 改进的主题逻辑 - 防止闪白问题 ---
            const body = $('body');

            function applyTheme(theme) {
                if (theme === 'dark') {
                    body.addClass('dark-mode');
                    document.documentElement.classList.add('dark-mode');
                } else {
                    body.removeClass('dark-mode');
                    document.documentElement.classList.remove('dark-mode');
                }
            }

            // 页面加载时，应用保存的主题
            let currentTheme = localStorage.getItem('theme') || 'light';
            applyTheme(currentTheme);

            // 延迟启用过渡动画，避免初始加载时的闪烁
            setTimeout(function() {
                body.addClass('transitions-enabled');
                console.log('Transitions enabled');
            }, 150); // 稍微延长时间确保所有元素都加载完成

            // --- 响应式菜单的控制逻辑 (保持不变) ---
            const hamburger = $('.hamburger-menu');
            const sidebar = $('.sidebar');
            const overlay = $('.sidebar-overlay');
            hamburger.on('click', function () {
                sidebar.addClass('visible');
                overlay.show();
            });
            overlay.on('click', function () {
                sidebar.removeClass('visible');
                overlay.hide();
            });

            // === 主题系统调试和确保正常工作 ===
            console.log('Main layout loaded');
            console.log('Current theme:', currentTheme);
            
            // 确保主题系统在主页面也能正常工作 - 现在使用头部按钮
            setTimeout(function() {
                if (window.ThemeSystem) {
                    console.log('ThemeSystem available in main layout');
                    // 确保默认主题被正确设置
                    window.ThemeSystem.ensureDefaultTheme();
                    // 初始化主题系统
                    window.ThemeSystem.init();
                } else {
                    console.error('ThemeSystem not available in main layout');
                }

                // 检查头部按钮是否存在
                const headerBtn = document.querySelector('#main-theme-btn');
                if (headerBtn) {
                    console.log('Header theme button found in main layout');
                } else {
                    console.error('Header theme button not found in main layout');
                }
            }, 500);
        });
    </script>
    <script>
        // 确保JavaScript和服务端状态同步
        (function() {
            var theme = localStorage.getItem('theme');
            if (theme === 'dark' && !document.body.classList.contains('dark-mode')) {
                document.body.classList.add('dark-mode');
                document.documentElement.classList.add('dark-mode');
            } else if (theme !== 'dark' && document.body.classList.contains('dark-mode')) {
                document.body.classList.remove('dark-mode');
                document.documentElement.classList.remove('dark-mode');
            }
        })();
    </script>
</body>
</html>