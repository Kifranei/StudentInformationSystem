@model List<StudentInformationSystem.Models.ClassSessions>

@{
    ViewBag.Title = "课程安排管理";
    var course = ViewBag.Course as StudentInformationSystem.Models.Courses;
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        <strong><span class="glyphicon glyphicon-ok-circle"></span> 成功！</strong> @TempData["SuccessMessage"]
    </div>
}

<div style="display: flex; justify-content: space-between; align-items: center;">
    <h2>课程安排管理</h2>
    <div>
        @Html.ActionLink("添加新安排", "AddCourseSchedule", new { courseId = course.CourseID }, new { @class = "btn btn-primary" })
        @Html.ActionLink("返回课程列表", "CourseList", null, new { @class = "btn btn-default" })
    </div>
</div>
<hr />

<div class="panel panel-info">
    <div class="panel-heading">
        <h4><span class="glyphicon glyphicon-info-sign"></span> 课程信息</h4>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6">
                <p><strong>课程名称：</strong>@course.CourseName</p>
                <p><strong>学分：</strong>@course.Credits 学分</p>
            </div>
            <div class="col-md-6">
                <p><strong>任课教师：</strong>
                    @if (course.Teachers != null)
                    {
                        @course.Teachers.TeacherName
                    }
                    else
                    {
                        <span class="text-danger">未分配教师</span>
                    }
                </p>
                <p><strong>课程类型：</strong>
                    @{
                        string courseType = "";
                        switch (course.CourseType)
                        {
                            case 1: courseType = "专业必修"; break;
                            case 2: courseType = "公共必修"; break;
                            case 3: courseType = "专业选修"; break;
                            case 4: courseType = "公共选修"; break;
                            case 5: courseType = "体育选修"; break;
                            default: courseType = "未知类型"; break;
                        }
                    }
                    <span class="label label-info">@courseType</span>
                </p>
            </div>
        </div>
    </div>
</div>

@* 显示假日周次信息 *@
@{
    var holidayDescriptions = StudentInformationSystem.Helpers.HolidayHelper.GetHolidayWeekDescriptions();
    if (holidayDescriptions.Any())
    {
        <div class="alert alert-info">
            <h5><span class="glyphicon glyphicon-calendar"></span> 本学期法定假日提醒</h5>
            <p>以下周次为法定假日，相应的课程安排不会在课表中显示：</p>
            <p>
                @foreach (var holiday in holidayDescriptions)
                {
                    <span class="label label-warning" style="margin-right: 8px;">第@(holiday.Key)周：@holiday.Value</span>
                }
            </p>
        </div>
    }
}

@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>周次范围</th>
                    <th>上课时间</th>
                    <th>教室</th>
                    <th>假日状态</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                @{
                    string[] dayNames = { "", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日" };
                    var holidayWeeks = StudentInformationSystem.Helpers.HolidayHelper.GetCurrentSemesterHolidayWeeks();
                }
                @foreach (var session in Model)
                {
                    <tr>
                        <td>
                            <span class="label label-info">第 @session.StartWeek - @session.EndWeek 周</span>
                        </td>
                        <td>
                            @{
                                var dayName = session.DayOfWeek >= 1 && session.DayOfWeek <= 7 ? dayNames[session.DayOfWeek] : "未知";
                            }
                            @dayName 第 @session.StartPeriod - @session.EndPeriod 节
                            <br />
                            <small class="text-muted">
                                @{
                                    string[] periodTimes = { "08:40-09:25", "09:30-10:15", "10:35-11:20", "11:25-12:10", "13:20-14:05", "14:10-14:55", "15:15-16:00", "16:05-16:50", "17:30-18:15", "18:20-19:05", "19:10-19:55", "20:00-20:45" };
                                    var startTime = session.StartPeriod >= 1 && session.StartPeriod <= 12 ? periodTimes[session.StartPeriod - 1].Split('-')[0] : "";
                                    var endTime = session.EndPeriod >= 1 && session.EndPeriod <= 12 ? periodTimes[session.EndPeriod - 1].Split('-')[1] : "";
                                }
                                @startTime - @endTime
                            </small>
                        </td>
                        <td>
                            <span class="label label-default">@session.Classroom</span>
                        </td>
                        <td>
                            @{
                                var conflictingHolidayWeeks = new List<int>();
                                for (int week = session.StartWeek; week <= session.EndWeek; week++)
                                {
                                    if (holidayWeeks.Contains(week))
                                    {
                                        conflictingHolidayWeeks.Add(week);
                                    }
                                }
                            }
                            @if (conflictingHolidayWeeks.Any())
                            {
                                <span class="label label-warning" title="包含假日周次：第@(string.Join("、", conflictingHolidayWeeks))周">
                                    <span class="glyphicon glyphicon-calendar"></span> 含假日
                                </span>
                            }
                            else
                            {
                                <span class="label label-success">
                                    <span class="glyphicon glyphicon-ok"></span> 正常
                                </span>
                            }
                        </td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                @Html.ActionLink("编辑", "EditCourseSchedule", new { sessionId = session.SessionID }, new { @class = "btn btn-warning", @title = "编辑这个课程安排" })
                                @Html.ActionLink("删除", "DeleteCourseSchedule", new { sessionId = session.SessionID }, new { @class = "btn btn-danger", @title = "删除这个课程安排" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="well well-sm">
        <p class="text-muted">
            <span class="glyphicon glyphicon-info-sign"></span>
            <strong>统计信息：</strong>该课程总共有 <strong>@Model.Count</strong> 个时间安排。
            管理员可以为课程创建多个不同时间段的安排，以应对复杂的教学安排需求。
            系统会自动检测并跳过法定假日周次。
        </p>
    </div>
}
else
{
    <div class="well text-center">
        <h4><span class="glyphicon glyphicon-info-sign text-muted"></span> 暂无课程安排</h4>
        @if (course.Teachers == null)
        {
            <p class="text-danger">该课程尚未分配教师，无法添加课程安排。请先为课程分配教师。</p>
            @Html.ActionLink("编辑课程", "EditCourse", new { id = course.CourseID }, new { @class = "btn btn-warning btn-lg" })
        }
        else
        {
            <p class="text-muted">该课程还没有添加任何时间安排。现在就开始创建第一个课程安排吧！</p>
            @Html.ActionLink("立即添加", "AddCourseSchedule", new { courseId = course.CourseID }, new { @class = "btn btn-primary btn-lg" })
        }
    </div>
}

<div class="panel panel-default" style="margin-top: 30px;">
    <div class="panel-heading">
        <h4><span class="glyphicon glyphicon-question-sign"></span> 智能排课说明</h4>
    </div>
    <div class="panel-body">
        <p><strong>管理员可以：</strong></p>
        <div class="row">
            <div class="col-md-6">
                <ul>
                    <li><strong>灵活安排</strong>：为同一门课程创建多个时间段</li>
                    <li><strong>时间冲突检测</strong>：自动检查教师时间冲突</li>
                    <li><strong>假日智能跳过</strong>：系统自动识别法定假日</li>
                </ul>
            </div>
            <div class="col-md-6">
                <ul>
                    <li><strong>统一管理</strong>：集中管理所有课程的时间安排</li>
                    <li><strong>详细统计</strong>：查看每个安排的假日状态</li>
                    <li><strong>安全操作</strong>：删除前会有确认提示</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<style>
    .label {
        font-size: 85%;
        padding: 0.3em 0.6em;
    }
    
    .btn-group-sm > .btn {
        padding: 5px 10px;
        font-size: 12px;
    }
    
    .table > tbody > tr:hover {
        background-color: #f5f5f5;
    }
    
    .well-sm {
        padding: 9px;
        border-radius: 3px;
    }
    
    .panel-default .panel-heading {
        background-color: #f5f5f5;
        border-color: #ddd;
    }

    .alert-info {
        background-color: #d9edf7;
        border-color: #bce8f1;
        color: #31708f;
    }

    .label-warning {
        background-color: #f0ad4e;
    }

    .label-success {
        background-color: #5cb85c;
    }
</style>